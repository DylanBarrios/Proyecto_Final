package fynal.project;

import java.io.File;
import java.io.FileInputStream;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class ReportsDialog extends javax.swing.JFrame {

    
    PlayersDialog pd = new PlayersDialog();
    Properties mostrar = new Properties();
    public int selected =0;
    
    
    public ReportsDialog() {
        initComponents();
        propiedadesTabla();
        RegistrosTabla();
    }
    
    //Agrego los titulos de la tabla
    private void propiedadesTabla(){
        jTable1.setDefaultRenderer(Object.class, new ImgTable());
        String titulos[] = {"Name","Vehicle","State","destroyed enemies","Times it was destroyed","Image"};
        pd.dtm = new DefaultTableModel(null,titulos);
        jTable1.setRowHeight(110);
    }

    
    //Agrego los nuevos jugadores que se hayan registrado 
    private void actualizarTabla(){
        pd.registros = pd.contenedor.listFiles();
        pd.dtm.setRowCount(0);
        RegistrosTabla();
    }
    
    //Este metodo me cargara todos los datos qeu encuentre en la carpeta y me mostrara 
    //los atributos que yo quiera
    
    private void RegistrosTabla(){
        for (int i = 0; i < pd.registros.length; i++) {
            File URL = new File(pd.ubicacion+pd.registros[i].getName());
            try {
                FileInputStream fis = new FileInputStream(URL);
                mostrar.load(fis);
               
                pd.dtm.addRow(new Object[]{pd.registros[i].getName().replace(".dr",""),
                mostrar.getProperty("Vehicle1"),estado(),mostrar.getProperty("destroyedEnemies"),mostrar.getProperty("destroyer"),image1()});
                
                pd.dtm.addRow(new Object[]{pd.registros[i].getName().replace(".dr",""),
                mostrar.getProperty("Vehicle2"),estado(),mostrar.getProperty("destroyedEnemies"),mostrar.getProperty("destroyer"),image2()});
                
                pd.dtm.addRow(new Object[]{pd.registros[i].getName().replace(".dr",""),
                mostrar.getProperty("Vehicle3"),estado(),mostrar.getProperty("destroyedEnemies"),mostrar.getProperty("destroyer"),image3()});
            } catch (Exception e) {
            }
        jTable1.setModel(pd.dtm);
        }
    }
    
    //Metodo que me ayudara a saber si mi vehiculo aun tiene vida para seguir jugando
    private String estado(){
        if(pd.HP>0)
            return "activo";
        else
            return "Inactivo";
    }
    
    //Estos metodos me imprimen la imagen en la JTable leyendo que tipo
    //de vehiculo es el que tengo 
    
    private JLabel image1(){
            if(mostrar.getProperty("TipoVehiculo1").equals("War Plane"))
                return new JLabel(new ImageIcon(getClass().getResource("/Imagenes/plane.jpg")));
            else
                return new JLabel(new ImageIcon(getClass().getResource("/Imagenes/tank.jpg")));
    }

    private JLabel image2(){
            if(mostrar.getProperty("TipoVehiculo2").equals("War Plane"))
                return new JLabel(new ImageIcon(getClass().getResource("/Imagenes/plane.jpg")));
            else
                return new JLabel(new ImageIcon(getClass().getResource("/Imagenes/tank.jpg")));
    }
        
    private JLabel image3(){
        if(mostrar.getProperty("TipoVehiculo3").equals("War Plane"))
                return new JLabel(new ImageIcon(getClass().getResource("/Imagenes/plane.jpg")));
        else
                return new JLabel(new ImageIcon(getClass().getResource("/Imagenes/tank.jpg")));
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txt_ = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_CaretUpdate(evt);
            }
        });

        jMenu1.setText("Sort by...");

        jMenuItem1.setText("name");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("state");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Destroyed enemies");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem5.setText("He has been Destoyed");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1001, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txt_, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txt_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        MainWindow mw = new MainWindow();
        selected = jTable1.rowAtPoint(evt.getPoint());
        int question = JOptionPane.showConfirmDialog(rootPane, "Do you want to play with "+String.valueOf(jTable1.getValueAt(selected,0))+"?");
        if(question == JOptionPane.YES_OPTION){
            
            File URL = new File(pd.ubicacion+pd.registros[selected/selected].getName());
            try {
                
                FileInputStream fis = new FileInputStream(URL);
                mostrar.load(fis);
                
                pd.vehicle1 = mostrar.getProperty("TipoVehiculo1");
                System.out.println("Ella tiene"+pd.vehicle1);
                pd.vehicle2 = mostrar.getProperty("TipoVehiculo2");                
                System.out.println("Ella tiene"+pd.vehicle2);
                pd.vehicle3 = mostrar.getProperty("TipoVehiculo3");
                System.out.println("Ella tiene"+pd.vehicle3);
            }
            catch(Exception e){System.out.println("Fallo"+e);}
            tmp tm = new tmp();
            String convert = Integer.toString(selected);
            txt_.setText(null);
            System.out.println(selected);
            this.setVisible(false);
            mw.sacarTexto();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_CaretUpdate
        tmp tm = new tmp();
        tm.setTmp(txt_.getText());
       
    }//GEN-LAST:event_txt_CaretUpdate

    private void sacarTexto(){
        tmp tm = new tmp();
        System.out.println("El valor es "+tm.getTmp());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_;
    // End of variables declaration//GEN-END:variables

}
